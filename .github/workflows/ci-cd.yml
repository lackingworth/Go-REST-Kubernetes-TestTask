name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  golang-test:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: books
        ports:
          - 5433:5432
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'
            
    - name: Build
      run: cd api; go build; cd ..

# Only when tests are present
#    - name: Test
#     run: cd api; go test

  docker-build:
    name: docker-compose
    needs: golang-test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Stack
        working-directory: /Go-REST-Kubernetes-TestTask
        run: docker compose up -d

# For Deployment: Change configuration before uncommenting, and replace the docker stack set up with the following
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#
#     - name: Login to DockerHub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_PASSWORD }}
#
#     - name: Build and push the image:
#       uses: docker/build-push-action@v3
#       with:
#         push: true
#
#  deploy:
#    name: Deploy to Kubernetes
#    needs: [ golang-test, docker-build ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set the Kubernetes context
#        uses: azure/k8s-set-context@v2
#        with:
#          method: service-account
#          k8s-url: <server-url>
#          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
#
#      - name: Checout source code
#        uses: actions/checkout@v3
#
#      - name: Deploy Kubernetes Cluster
#        uses: azure/k8s-deploy@v1
#        with:
#          namespace: default
#          manifests: |
#            /deployment.yml
#            /service.yml
#          images: |
#            <link to your docker hub image>
